```go
/*
Outline and Function Summary:

**Agent Name:**  SynapseAI - A Context-Aware, Adaptive AI Agent

**Architecture:** Message-Channel-Processor (MCP)

**Core Concept:** SynapseAI focuses on building a dynamic understanding of user context and adapting its behavior and responses accordingly. It goes beyond simple request-response and aims for a more proactive and anticipatory interaction style.  It leverages a knowledge graph for context management and reasoning, and includes features for ethical considerations and explainability.

**Function Summary (20+ Functions):**

**Context & Memory Management:**
1.  `StoreContext(userID string, contextData map[string]interface{})`: Stores user context data (preferences, past interactions, current situation) in the knowledge graph.
2.  `RetrieveContext(userID string) (map[string]interface{}, error)`: Retrieves user context data based on userID.
3.  `UpdateContext(userID string, contextUpdates map[string]interface{})`: Updates existing user context in the knowledge graph.
4.  `ForgetContext(userID string, contextKeys []string)`: Removes specific context elements for a user.
5.  `InferContext(userID string) (map[string]interface{}, error)`:  Infers implicit context based on existing data and knowledge graph relationships (e.g., infers user's mood from recent interactions).

**Proactive & Adaptive Behavior:**
6.  `AnticipateUserNeed(userID string) (string, error)`: Predicts potential user needs based on context and historical patterns (e.g., suggests relevant actions or information).
7.  `AdaptiveResponse(userID string, query string) (string, error)`:  Dynamically adjusts the agent's response style (tone, detail level, language) based on user context and interaction history.
8.  `ProactiveAlert(userID string, event string) (string, error)`:  Initiates alerts or notifications based on contextual triggers (e.g., upcoming appointments, relevant news based on interests).
9.  `ContextualTaskDelegation(taskDescription string, context map[string]interface{}) (string, error)`: Intelligently routes tasks to appropriate sub-modules or external services based on context.

**Advanced AI Capabilities:**
10. `PersonalizedRecommendation(userID string, category string) ([]interface{}, error)`: Provides highly personalized recommendations (products, content, services) based on deep context understanding.
11. `SentimentAnalysis(text string) (string, float64, error)`: Performs sentiment analysis on text input, returning sentiment label and score.
12. `TrendIdentification(data []string) ([]string, error)`:  Identifies emerging trends from a given dataset of text or data points.
13. `CausalReasoning(eventA string, eventB string) (string, error)`: Attempts to infer causal relationships between events based on knowledge graph and contextual information.
14. `ExplainableAI(query string, decisionData map[string]interface{}) (string, error)`: Provides a simplified explanation for the agent's decisions or actions, focusing on relevant context factors.
15. `BiasDetection(text string) (string, float64, error)`:  Analyzes text for potential biases (gender, racial, etc.) and provides a bias score.
16. `EthicalConsiderationCheck(action string, context map[string]interface{}) (string, error)`:  Evaluates the ethical implications of a proposed action based on context and predefined ethical guidelines.

**User Interaction & Interface Functions:**
17. `InteractiveDialogue(userID string, userInput string) (string, error)`: Manages a multi-turn conversational dialogue with the user, maintaining context across turns.
18. `ContextualHelp(userID string, featureName string) (string, error)`: Provides context-sensitive help and guidance based on the user's current activity and context.
19. `UserFeedbackLoop(userID string, feedbackData map[string]interface{}) (string, error)`:  Collects and processes user feedback to improve agent performance and personalization.
20. `AgentConfiguration(userID string, configParams map[string]interface{}) (string, error)`: Allows users to customize agent behavior and preferences within ethical and functional boundaries.
21. `KnowledgeGraphQuery(query string) (interface{}, error)`:  Allows direct querying of the underlying knowledge graph for advanced users or debugging. (Bonus function, exceeding 20)


**MCP Implementation Notes:**

*   **Messages:**  Defined as structs representing requests and responses for each function.
*   **Channels:**  `requestChannel` for receiving incoming messages, `responseChannel` for sending responses.
*   **Processors:**  Dedicated goroutines for handling different message types (e.g., `ContextProcessor`, `RecommendationProcessor`, `NLPProcessor`).
*   **Agent State:**  Struct to hold shared agent data, including the knowledge graph, configuration, and potentially models.
*   **Knowledge Graph:**  A simplified in-memory representation or interface to an external knowledge graph database (for demonstration purposes, an in-memory map can suffice).
*   **Error Handling:** Basic error handling with error returns.
*   **Concurrency:**  Leverages Go's goroutines and channels for concurrent message processing.

*/

package main

import (
	"errors"
	"fmt"
	"sync"
	"time"
)

// Define Message Types for MCP
type MessageType string

const (
	StoreContextMsgType           MessageType = "StoreContext"
	RetrieveContextMsgType        MessageType = "RetrieveContext"
	UpdateContextMsgType          MessageType = "UpdateContext"
	ForgetContextMsgType          MessageType = "ForgetContext"
	InferContextMsgType           MessageType = "InferContext"
	AnticipateUserNeedMsgType      MessageType = "AnticipateUserNeed"
	AdaptiveResponseMsgType        MessageType = "AdaptiveResponse"
	ProactiveAlertMsgType          MessageType = "ProactiveAlert"
	ContextualTaskDelegationMsgType MessageType = "ContextualTaskDelegation"
	PersonalizedRecommendationMsgType MessageType = "PersonalizedRecommendation"
	SentimentAnalysisMsgType       MessageType = "SentimentAnalysis"
	TrendIdentificationMsgType      MessageType = "TrendIdentification"
	CausalReasoningMsgType         MessageType = "CausalReasoning"
	ExplainableAIMsgType          MessageType = "ExplainableAI"
	BiasDetectionMsgType          MessageType = "BiasDetection"
	EthicalConsiderationCheckMsgType MessageType = "EthicalConsiderationCheck"
	InteractiveDialogueMsgType      MessageType = "InteractiveDialogue"
	ContextualHelpMsgType         MessageType = "ContextualHelp"
	UserFeedbackLoopMsgType        MessageType = "UserFeedbackLoop"
	AgentConfigurationMsgType       MessageType = "AgentConfiguration"
	KnowledgeGraphQueryMsgType      MessageType = "KnowledgeGraphQuery"
)

// Define Message Structure
type Message struct {
	Type    MessageType
	Payload interface{} // Can be different structs based on MessageType
	ResponseChan chan Response
}

// Define Response Structure
type Response struct {
	Data  interface{}
	Error error
}

// Agent State (Simplified - In-Memory Knowledge Graph for Demo)
type AgentState struct {
	KnowledgeGraph map[string]map[string]interface{} // userID -> context data
	Config         map[string]interface{}          // Agent-wide configuration
	sync.RWMutex                                    // Mutex for concurrent access to state
}

// AIAgent Structure
type AIAgent struct {
	requestChannel chan Message
	state          *AgentState
}

// NewAIAgent initializes and starts the AI Agent with MCP architecture
func NewAIAgent() *AIAgent {
	agent := &AIAgent{
		requestChannel: make(chan Message),
		state: &AgentState{
			KnowledgeGraph: make(map[string]map[string]interface{}),
			Config: map[string]interface{}{
				"agentName":    "SynapseAI",
				"modelVersion": "v1.0",
				// ... more config parameters
			},
		},
	}
	agent.startMCP() // Start Message Channel Processor
	return agent
}

// startMCP starts the message processing loop and processors
func (agent *AIAgent) startMCP() {
	// Start Processors as Goroutines
	go agent.contextProcessor(agent.requestChannel)
	go agent.reasoningProcessor(agent.requestChannel)
	go agent.nlpProcessor(agent.requestChannel)
	go agent.recommendationProcessor(agent.requestChannel)
	go agent.configProcessor(agent.requestChannel)
	go agent.knowledgeGraphProcessor(agent.requestChannel)

	// Central Message Processing Loop (in main goroutine for simplicity in this example)
	go func() {
		for msg := range agent.requestChannel {
			agent.processMessage(msg)
		}
	}()
}

// processMessage routes messages to appropriate processors (Simplified routing)
func (agent *AIAgent) processMessage(msg Message) {
	switch msg.Type {
	case StoreContextMsgType, RetrieveContextMsgType, UpdateContextMsgType, ForgetContextMsgType, InferContextMsgType:
		// Context Processor handles these
	case AnticipateUserNeedMsgType, AdaptiveResponseMsgType, ProactiveAlertMsgType, ContextualTaskDelegationMsgType, CausalReasoningMsgType, ExplainableAIMsgType, EthicalConsiderationCheckMsgType:
		// Reasoning Processor handles these
	case SentimentAnalysisMsgType, TrendIdentificationMsgType, BiasDetectionMsgType, InteractiveDialogueMsgType, ContextualHelpMsgType:
		// NLP Processor handles these
	case PersonalizedRecommendationMsgType:
		// Recommendation Processor handles these
	case AgentConfigurationMsgType:
		// Config Processor handles these
	case KnowledgeGraphQueryMsgType:
		// Knowledge Graph Processor
	default:
		msg.ResponseChan <- Response{Error: fmt.Errorf("unknown message type: %s", msg.Type)}
		return
	}
	// For this simplified example, processors directly read from requestChannel.
	// In a more complex system, there could be internal routing channels.
}

// ------------------------ Processor Implementations ------------------------

// contextProcessor handles context-related messages
func (agent *AIAgent) contextProcessor(requestChan <-chan Message) {
	for msg := range requestChan {
		switch msg.Type {
		case StoreContextMsgType:
			payload, ok := msg.Payload.(StoreContextRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for StoreContext")}
				continue
			}
			response := agent.handleStoreContext(payload)
			msg.ResponseChan <- response
		case RetrieveContextMsgType:
			payload, ok := msg.Payload.(RetrieveContextRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for RetrieveContext")}
				continue
			}
			response := agent.handleRetrieveContext(payload)
			msg.ResponseChan <- response
		case UpdateContextMsgType:
			payload, ok := msg.Payload.(UpdateContextRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for UpdateContext")}
				continue
			}
			response := agent.handleUpdateContext(payload)
			msg.ResponseChan <- response
		case ForgetContextMsgType:
			payload, ok := msg.Payload.(ForgetContextRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for ForgetContext")}
				continue
			}
			response := agent.handleForgetContext(payload)
			msg.ResponseChan <- response
		case InferContextMsgType:
			payload, ok := msg.Payload.(InferContextRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for InferContext")}
				continue
			}
			response := agent.handleInferContext(payload)
			msg.ResponseChan <- response
		}
	}
}

// reasoningProcessor handles reasoning and proactive behavior messages
func (agent *AIAgent) reasoningProcessor(requestChan <-chan Message) {
	for msg := range requestChan {
		switch msg.Type {
		case AnticipateUserNeedMsgType:
			payload, ok := msg.Payload.(AnticipateUserNeedRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for AnticipateUserNeed")}
				continue
			}
			response := agent.handleAnticipateUserNeed(payload)
			msg.ResponseChan <- response
		case AdaptiveResponseMsgType:
			payload, ok := msg.Payload.(AdaptiveResponseRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for AdaptiveResponse")}
				continue
			}
			response := agent.handleAdaptiveResponse(payload)
			msg.ResponseChan <- response
		case ProactiveAlertMsgType:
			payload, ok := msg.Payload.(ProactiveAlertRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for ProactiveAlert")}
				continue
			}
			response := agent.handleProactiveAlert(payload)
			msg.ResponseChan <- response
		case ContextualTaskDelegationMsgType:
			payload, ok := msg.Payload.(ContextualTaskDelegationRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for ContextualTaskDelegation")}
				continue
			}
			response := agent.handleContextualTaskDelegation(payload)
			msg.ResponseChan <- response
		case CausalReasoningMsgType:
			payload, ok := msg.Payload.(CausalReasoningRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for CausalReasoning")}
				continue
			}
			response := agent.handleCausalReasoning(payload)
			msg.ResponseChan <- response
		case ExplainableAIMsgType:
			payload, ok := msg.Payload.(ExplainableAIRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for ExplainableAI")}
				continue
			}
			response := agent.handleExplainableAI(payload)
			msg.ResponseChan <- response
		case EthicalConsiderationCheckMsgType:
			payload, ok := msg.Payload.(EthicalConsiderationCheckRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for EthicalConsiderationCheck")}
				continue
			}
			response := agent.handleEthicalConsiderationCheck(payload)
			msg.ResponseChan <- response
		}
	}
}

// nlpProcessor handles natural language processing related messages
func (agent *AIAgent) nlpProcessor(requestChan <-chan Message) {
	for msg := range requestChan {
		switch msg.Type {
		case SentimentAnalysisMsgType:
			payload, ok := msg.Payload.(SentimentAnalysisRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for SentimentAnalysis")}
				continue
			}
			response := agent.handleSentimentAnalysis(payload)
			msg.ResponseChan <- response
		case TrendIdentificationMsgType:
			payload, ok := msg.Payload.(TrendIdentificationRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for TrendIdentification")}
				continue
			}
			response := agent.handleTrendIdentification(payload)
			msg.ResponseChan <- response
		case BiasDetectionMsgType:
			payload, ok := msg.Payload.(BiasDetectionRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for BiasDetection")}
				continue
			}
			response := agent.handleBiasDetection(payload)
			msg.ResponseChan <- response
		case InteractiveDialogueMsgType:
			payload, ok := msg.Payload.(InteractiveDialogueRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for InteractiveDialogue")}
				continue
			}
			response := agent.handleInteractiveDialogue(payload)
			msg.ResponseChan <- response
		case ContextualHelpMsgType:
			payload, ok := msg.Payload.(ContextualHelpRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for ContextualHelp")}
				continue
			}
			response := agent.handleContextualHelp(payload)
			msg.ResponseChan <- response
		case UserFeedbackLoopMsgType:
			payload, ok := msg.Payload.(UserFeedbackLoopRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for UserFeedbackLoop")}
				continue
			}
			response := agent.handleUserFeedbackLoop(payload)
			msg.ResponseChan <- response
		}
	}
}

// recommendationProcessor handles recommendation related messages
func (agent *AIAgent) recommendationProcessor(requestChan <-chan Message) {
	for msg := range requestChan {
		if msg.Type == PersonalizedRecommendationMsgType {
			payload, ok := msg.Payload.(PersonalizedRecommendationRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for PersonalizedRecommendation")}
				continue
			}
			response := agent.handlePersonalizedRecommendation(payload)
			msg.ResponseChan <- response
		}
	}
}

// configProcessor handles agent configuration messages
func (agent *AIAgent) configProcessor(requestChan <-chan Message) {
	for msg := range requestChan {
		if msg.Type == AgentConfigurationMsgType {
			payload, ok := msg.Payload.(AgentConfigurationRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for AgentConfiguration")}
				continue
			}
			response := agent.handleAgentConfiguration(payload)
			msg.ResponseChan <- response
		}
	}
}

// knowledgeGraphProcessor handles direct knowledge graph query messages
func (agent *AIAgent) knowledgeGraphProcessor(requestChan <-chan Message) {
	for msg := range requestChan {
		if msg.Type == KnowledgeGraphQueryMsgType {
			payload, ok := msg.Payload.(KnowledgeGraphQueryRequest)
			if !ok {
				msg.ResponseChan <- Response{Error: errors.New("invalid payload for KnowledgeGraphQuery")}
				continue
			}
			response := agent.handleKnowledgeGraphQuery(payload)
			msg.ResponseChan <- response
		}
	}
}


// ------------------------ Agent Function Implementations (Interface) ------------------------

// 1. StoreContext
type StoreContextRequest struct {
	UserID      string
	ContextData map[string]interface{}
}

func (agent *AIAgent) StoreContext(userID string, contextData map[string]interface{}) error {
	responseChan := make(chan Response)
	agent.requestChannel <- Message{
		Type: StoreContextMsgType,
		Payload: StoreContextRequest{
			UserID:      userID,
			ContextData: contextData,
		},
		ResponseChan: responseChan,
	}
	response := <-responseChan
	return response.Error
}
func (agent *AIAgent) handleStoreContext(req StoreContextRequest) Response {
	agent.state.Lock()
	defer agent.state.Unlock()
	if _, exists := agent.state.KnowledgeGraph[req.UserID]; !exists {
		agent.state.KnowledgeGraph[req.UserID] = make(map[string]interface{})
	}
	for key, value := range req.ContextData {
		agent.state.KnowledgeGraph[req.UserID][key] = value
	}
	return Response{Data: "Context stored successfully", Error: nil}
}

// 2. RetrieveContext
type RetrieveContextRequest struct {
	UserID string
}

func (agent *AIAgent) RetrieveContext(userID string) (map[string]interface{}, error) {
	responseChan := make(chan Response)
	agent.requestChannel <- Message{
		Type: RetrieveContextMsgType,
		Payload: RetrieveContextRequest{
			UserID: userID,
		},
		ResponseChan: responseChan,
	}
	response := <-responseChan
	if response.Error != nil {
		return nil, response.Error
	}
	contextData, ok := response.Data.(map[string]interface{})
	if !ok {
		return nil, fmt.Errorf("invalid response data type for RetrieveContext")
	}
	return contextData, nil
}
func (agent *AIAgent) handleRetrieveContext(req RetrieveContextRequest) Response {
	agent.state.RLock()
	defer agent.state.RUnlock()
	contextData, exists := agent.state.KnowledgeGraph[req.UserID]
	if !exists {
		return Response{Data: nil, Error: fmt.Errorf("context not found for user: %s", req.UserID)}
	}
	return Response{Data: contextData, Error: nil}
}

// 3. UpdateContext
type UpdateContextRequest struct {
	UserID        string
	ContextUpdates map[string]interface{}
}

func (agent *AIAgent) UpdateContext(userID string, contextUpdates map[string]interface{}) error {
	responseChan := make(chan Response)
	agent.requestChannel <- Message{
		Type: UpdateContextMsgType,
		Payload: UpdateContextRequest{
			UserID:        userID,
			ContextUpdates: contextUpdates,
		},
		ResponseChan: responseChan,
	}
	response := <-responseChan
	return response.Error
}
func (agent *AIAgent) handleUpdateContext(req UpdateContextRequest) Response {
	agent.state.Lock()
	defer agent.state.Unlock()
	contextData, exists := agent.state.KnowledgeGraph[req.UserID]
	if !exists {
		agent.state.KnowledgeGraph[req.UserID] = make(map[string]interface{})
		contextData = agent.state.KnowledgeGraph[req.UserID] // Initialize if not exists
	}
	for key, value := range req.ContextUpdates {
		contextData[key] = value
	}
	return Response{Data: "Context updated successfully", Error: nil}
}

// 4. ForgetContext
type ForgetContextRequest struct {
	UserID      string
	ContextKeys []string
}

func (agent *AIAgent) ForgetContext(userID string, contextKeys []string) error {
	responseChan := make(chan Response)
	agent.requestChannel <- Message{
		Type: ForgetContextMsgType,
		Payload: ForgetContextRequest{
			UserID:      userID,
			ContextKeys: contextKeys,
		},
		ResponseChan: responseChan,
	}
	response := <-responseChan
	return response.Error
}
func (agent *AIAgent) handleForgetContext(req ForgetContextRequest) Response {
	agent.state.Lock()
	defer agent.state.Unlock()
	contextData, exists := agent.state.KnowledgeGraph[req.UserID]
	if !exists {
		return Response{Data: "No context found to forget for user", Error: nil} // Or error?
	}
	for _, key := range req.ContextKeys {
		delete(contextData, key)
	}
	return Response{Data: "Context keys forgotten", Error: nil}
}


// 5. InferContext (Simplified example - just checks for "lastActivity" and infers "activityLevel")
type InferContextRequest struct {
	UserID string
}

func (agent *AIAgent) InferContext(userID string) (map[string]interface{}, error) {
	responseChan := make(chan Response)
	agent.requestChannel <- Message{
		Type: InferContextMsgType,
		Payload: InferContextRequest{
			UserID: userID,
		},
		ResponseChan: responseChan,
	}
	response := <-responseChan
	if response.Error != nil {
		return nil, response.Error
	}
	inferredContext, ok := response.Data.(map[string]interface{})
	if !ok {
		return nil, fmt.Errorf("invalid response data type for InferContext")
	}
	return inferredContext, nil
}
func (agent *AIAgent) handleInferContext(req InferContextRequest) Response {
	agent.state.RLock()
	defer agent.state.RUnlock()
	contextData, exists := agent.state.KnowledgeGraph[req.UserID]
	if !exists {
		return Response{Data: map[string]interface{}{"inferred": "no context to infer from"}, Error: nil}
	}

	inferred := make(map[string]interface{})
	if lastActivityTime, ok := contextData["lastActivity"].(time.Time); ok {
		if time.Since(lastActivityTime) < time.Hour {
			inferred["activityLevel"] = "recent"
		} else {
			inferred["activityLevel"] = "inactive"
		}
	} else {
		inferred["activityLevel"] = "unknown"
	}
	inferred["inferred"] = "activityLevel based on lastActivity" // Explanation
	return Response{Data: inferred, Error: nil}
}


// 6. AnticipateUserNeed (Placeholder - simple keyword matching for demo)
type AnticipateUserNeedRequest struct {
	UserID string
}

func (agent *AIAgent) AnticipateUserNeed(userID string) (string, error) {
	responseChan := make(chan Response)
	agent.requestChannel <- Message{
		Type: AnticipateUserNeedMsgType,
		Payload: AnticipateUserNeedRequest{
			UserID: userID,
		},
		ResponseChan: responseChan,
	}
	response := <-responseChan
	if response.Error != nil {
		return "", response.Error
	}
	need, ok := response.Data.(string)
	if !ok {
		return "", fmt.Errorf("invalid response data type for AnticipateUserNeed")
	}
	return need, nil
}
func (agent *AIAgent) handleAnticipateUserNeed(req AnticipateUserNeedRequest) Response {
	agent.state.RLock()
	defer agent.state.RUnlock()
	contextData, exists := agent.state.KnowledgeGraph[req.UserID]
	if !exists {
		return Response{Data: "No context to anticipate needs", Error: nil}
	}

	if interests, ok := contextData["interests"].([]string); ok {
		for _, interest := range interests {
			if interest == "news" {
				return Response{Data: "User might need latest news updates.", Error: nil}
			}
			if interest == "music" {
				return Response{Data: "User might want music recommendations.", Error: nil}
			}
		}
	}
	return Response{Data: "No specific need anticipated based on context.", Error: nil}
}

// 7. AdaptiveResponse (Simple example - adjusts tone based on "mood" context)
type AdaptiveResponseRequest struct {
	UserID string
	Query  string
}

func (agent *AIAgent) AdaptiveResponse(userID string, query string) (string, error) {
	responseChan := make(chan Response)
	agent.requestChannel <- Message{
		Type: AdaptiveResponseMsgType,
		Payload: AdaptiveResponseRequest{
			UserID: userID,
			Query:  query,
		},
		ResponseChan: responseChan,
	}
	response := <-responseChan
	if response.Error != nil {
		return "", response.Error
	}
	adaptedResponse, ok := response.Data.(string)
	if !ok {
		return "", fmt.Errorf("invalid response data type for AdaptiveResponse")
	}
	return adaptedResponse, nil
}
func (agent *AIAgent) handleAdaptiveResponse(req AdaptiveResponseRequest) Response {
	agent.state.RLock()
	defer agent.state.RUnlock()
	contextData, exists := agent.state.KnowledgeGraph[req.UserID]
	if !exists {
		return Response{Data: "Default response: " + req.Query + " (No context)", Error: nil}
	}

	baseResponse := "Agent says: " + req.Query // Basic response

	if mood, ok := contextData["mood"].(string); ok {
		if mood == "happy" {
			return Response{Data: "Glad you asked! " + baseResponse + " 😊", Error: nil}
		} else if mood == "sad" {
			return Response{Data: "I understand. " + baseResponse + " Let me know if I can help further.", Error: nil}
		}
	}
	return Response{Data: baseResponse + " (Standard tone)", Error: nil}
}

// 8. ProactiveAlert (Placeholder - simple alert based on "meetingTime" context)
type ProactiveAlertRequest struct {
	UserID string
	Event  string // Generic event description
}

func (agent *AIAgent) ProactiveAlert(userID string, event string) (string, error) {
	responseChan := make(chan Response)
	agent.requestChannel <- Message{
		Type: ProactiveAlertMsgType,
		Payload: ProactiveAlertRequest{
			UserID: userID,
			Event:  event,
		},
		ResponseChan: responseChan,
	}
	response := <-responseChan
	if response.Error != nil {
		return "", response.Error
	}
	alertResult, ok := response.Data.(string)
	if !ok {
		return "", fmt.Errorf("invalid response data type for ProactiveAlert")
	}
	return alertResult, nil
}
func (agent *AIAgent) handleProactiveAlert(req ProactiveAlertRequest) Response {
	agent.state.RLock()
	defer agent.state.RUnlock()
	contextData, exists := agent.state.KnowledgeGraph[req.UserID]
	if !exists {
		return Response{Data: "No context for proactive alerts.", Error: nil}
	}

	if meetingTimeStr, ok := contextData["meetingTime"].(string); ok {
		meetingTime, err := time.Parse(time.RFC3339, meetingTimeStr)
		if err == nil && meetingTime.Sub(time.Now()) < 15*time.Minute && meetingTime.Sub(time.Now()) > 0 {
			return Response{Data: fmt.Sprintf("Alert: Your meeting at %s is in 15 minutes!", meetingTime.Format("15:04")), Error: nil}
		}
	}
	return Response{Data: "No proactive alerts triggered based on context.", Error: nil}
}

// 9. ContextualTaskDelegation (Placeholder - simple task routing based on "taskType" context)
type ContextualTaskDelegationRequest struct {
	TaskDescription string
	Context         map[string]interface{}
}

func (agent *AIAgent) ContextualTaskDelegation(taskDescription string, context map[string]interface{}) (string, error) {
	responseChan := make(chan Response)
	agent.requestChannel <- Message{
		Type: ContextualTaskDelegationMsgType,
		Payload: ContextualTaskDelegationRequest{
			TaskDescription: taskDescription,
			Context:         context,
		},
		ResponseChan: responseChan,
	}
	response := <-responseChan
	if response.Error != nil {
		return "", response.Error
	}
	delegationResult, ok := response.Data.(string)
	if !ok {
		return "", fmt.Errorf("invalid response data type for ContextualTaskDelegation")
	}
	return delegationResult, nil
}
func (agent *AIAgent) handleContextualTaskDelegation(req ContextualTaskDelegationRequest) Response {
	taskType := req.Context["taskType"] // Assume "taskType" is in context
	if taskType == "email" {
		return Response{Data: "Task delegated to Email Subsystem.", Error: nil}
	} else if taskType == "calendar" {
		return Response{Data: "Task delegated to Calendar Subsystem.", Error: nil}
	} else {
		return Response{Data: "Task routed to Default Task Handler.", Error: nil}
	}
}


// 10. PersonalizedRecommendation (Placeholder - simple category-based recommendation)
type PersonalizedRecommendationRequest struct {
	UserID   string
	Category string
}

func (agent *AIAgent) PersonalizedRecommendation(userID string, category string) ([]interface{}, error) {
	responseChan := make(chan Response)
	agent.requestChannel <- Message{
		Type: PersonalizedRecommendationMsgType,
		Payload: PersonalizedRecommendationRequest{
			UserID:   userID,
			Category: category,
		},
		ResponseChan: responseChan,
	}
	response := <-responseChan
	if response.Error != nil {
		return nil, response.Error
	}
	recommendations, ok := response.Data.([]interface{}) // Assume slice of interfaces for items
	if !ok {
		return nil, fmt.Errorf("invalid response data type for PersonalizedRecommendation")
	}
	return recommendations, nil
}
func (agent *AIAgent) handlePersonalizedRecommendation(req PersonalizedRecommendationRequest) Response {
	agent.state.RLock()
	defer agent.state.RUnlock()
	contextData, exists := agent.state.KnowledgeGraph[req.UserID]
	if !exists {
		return Response{Data: []interface{}{"No recommendations without user context."}, Error: nil}
	}

	if req.Category == "movies" {
		if genres, ok := contextData["preferredMovieGenres"].([]string); ok {
			if len(genres) > 0 {
				return Response{Data: []interface{}{"Movie Recommendation 1 (based on genres: " + genres[0] + ")", "Movie Recommendation 2"}, Error: nil}
			}
		}
		return Response{Data: []interface{}{"Generic Movie Recommendation 1", "Generic Movie Recommendation 2"}, Error: nil} // Default movies
	} else if req.Category == "books" {
		return Response{Data: []interface{}{"Book Recommendation 1", "Book Recommendation 2"}, Error: nil} // Default books
	} else {
		return Response{Data: []interface{}{"No recommendations for category: " + req.Category}, Error: nil}
	}
}

// 11. SentimentAnalysis (Placeholder - Very basic sentiment analysis)
type SentimentAnalysisRequest struct {
	Text string
}

func (agent *AIAgent) SentimentAnalysis(text string) (string, float64, error) {
	responseChan := make(chan Response)
	agent.requestChannel <- Message{
		Type: SentimentAnalysisMsgType,
		Payload: SentimentAnalysisRequest{
			Text: text,
		},
		ResponseChan: responseChan,
	}
	response := <-responseChan
	if response.Error != nil {
		return "", 0.0, response.Error
	}
	resultMap, ok := response.Data.(map[string]interface{})
	if !ok {
		return "", 0.0, fmt.Errorf("invalid response data type for SentimentAnalysis")
	}
	sentimentLabel, _ := resultMap["sentiment"].(string)
	sentimentScore, _ := resultMap["score"].(float64)
	return sentimentLabel, sentimentScore, nil
}
func (agent *AIAgent) handleSentimentAnalysis(req SentimentAnalysisRequest) Response {
	text := req.Text
	if containsPositiveKeywords(text) {
		return Response{Data: map[string]interface{}{"sentiment": "positive", "score": 0.7}, Error: nil}
	} else if containsNegativeKeywords(text) {
		return Response{Data: map[string]interface{}{"sentiment": "negative", "score": -0.6}, Error: nil}
	} else {
		return Response{Data: map[string]interface{}{"sentiment": "neutral", "score": 0.0}, Error: nil}
	}
}
func containsPositiveKeywords(text string) bool {
	positiveKeywords := []string{"good", "great", "excellent", "happy", "joyful", "amazing", "wonderful"}
	for _, keyword := range positiveKeywords {
		if containsWord(text, keyword) {
			return true
		}
	}
	return false
}
func containsNegativeKeywords(text string) bool {
	negativeKeywords := []string{"bad", "terrible", "awful", "sad", "unhappy", "horrible", "disappointing"}
	for _, keyword := range negativeKeywords {
		if containsWord(text, keyword) {
			return true
		}
	}
	return false
}
func containsWord(text, word string) bool {
	// Simple word check - can be improved with NLP techniques
	return len(text) >= len(word) && (text == word || text[:len(word)+1] == word+" " || text[len(text)-len(word)-1:] == " "+word || containsWordCaseInsensitive(text, " "+word+" "))
}
func containsWordCaseInsensitive(text, word string) bool {
	// Simple case-insensitive check - can be improved with NLP techniques
	return len(text) >= len(word) && (text == word || text[:len(word)+1] == word+" " || text[len(text)-len(word)-1:] == " "+word || containsWordCaseInsensitiveInner(text, " "+word+" "))
}
func containsWordCaseInsensitiveInner(text, word string) bool {
	// Simple case-insensitive check - can be improved with NLP techniques
	textLower := toLower(text)
	wordLower := toLower(word)
	return len(textLower) >= len(wordLower) && (textLower == wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || containsWordCaseInsensitiveInnerMost(textLower, " "+wordLower+" "))
}
func containsWordCaseInsensitiveInnerMost(text, word string) bool {
	// Simple case-insensitive check - can be improved with NLP techniques
	textLower := toLower(text)
	wordLower := toLower(word)
	return len(textLower) >= len(wordLower) && (textLower == wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower+" " || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordWordlower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower)+1] == wordLower || textLower[len(textLower)-len(wordLower)-1:] == " "+wordLower || textLower[:len(wordLower